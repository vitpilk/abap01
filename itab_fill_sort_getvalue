*CLASS zcl_exercism_ex2_vp001 DEFINITION
*  PUBLIC
*  FINAL
*  CREATE PUBLIC .
*
*  PUBLIC SECTION.
*  PROTECTED SECTION.
*  PRIVATE SECTION.
*ENDCLASS.
*
*
*
*CLASS zcl_exercism_ex2_vp001 IMPLEMENTATION.
*ENDCLASS.

CLASS zcl_exercism_ex2_vp001 DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .


    TYPES group TYPE c LENGTH 1.

    "line type
    TYPES: BEGIN OF initial_type,
             group       TYPE group,
             number      TYPE i,
             description TYPE string,
           END OF initial_type.

    "table type
    TYPES: itab_data_type TYPE STANDARD TABLE OF initial_type WITH EMPTY KEY.

    METHODS fill_itab
           RETURNING
             VALUE(initial_data) TYPE itab_data_type.

    METHODS add_to_itab
           IMPORTING initial_data TYPE itab_data_type
           RETURNING
            VALUE(updated_data) TYPE itab_data_type.

    METHODS sort_itab
           IMPORTING initial_data TYPE itab_data_type
           RETURNING
            VALUE(updated_data) TYPE itab_data_type.

    METHODS search_itab
           IMPORTING initial_data TYPE itab_data_type
           RETURNING
             VALUE(result_index) TYPE i.

  PROTECTED SECTION.

  PRIVATE SECTION.

ENDCLASS.



CLASS zcl_exercism_ex2_vp001 IMPLEMENTATION.

  METHOD fill_itab.
    "add solution here

    initial_data = value #(

    ( group = 'A' number = 10 description ='Group A-2' )
    ( group = 'B' number = 5 description ='Group B' )
    ( group = 'A' number = 6 description ='Group A-1' )

    ( group = 'C' number = 22 description ='Group C-1' )
    ( group = 'A' number = 13 description ='Group A-3' )
    ( group = 'C' number = 500 description ='Group C-2' )

     ).

  ENDMETHOD.

  METHOD add_to_itab.
    updated_data = initial_data.
    "add solution here
    append value #( group = 'A' number = 19 description ='Group A-4' ) to updated_data.

  ENDMETHOD.

  METHOD sort_itab.
    updated_data = initial_data.
    "add solution here
    SORT updated_data BY group ASCENDING number DESCENDING.
  ENDMETHOD.

  METHOD search_itab.
    DATA(temp_data) = initial_data.
    "add solution here

*    LOOP AT temp_data TRANSPORTING NO FIELDS WHERE number = 6.
*      result_index = sy-tabix.
*    ENDLOOP.

    READ TABLE temp_data
        WITH KEY number = 6 TRANSPORTING NO FIELDS.
    result_index = sy-tabix.

*    data wa type initial_type.
*    LOOP AT temp_data into wa.
*      "result_index = sy-tabix.
*        result_index = wa-description.
*    ENDLOOP.


  ENDMETHOD.

  METHOD if_oo_adt_classrun~main.

    out->write( fill_itab(  ) ).
    out->write( '---------------------------------' ).
    out->write( add_to_itab( fill_itab(  ) ) ).
    out->write( '---------------------------------' ).
    out->write( sort_itab( fill_itab(  ) ) ).
    out->write( '---------------------------------' ).
    out->write( search_itab( fill_itab(  ) ) ).
    out->write( '---------------------------------' ).

  ENDMETHOD.


ENDCLASS.


*
